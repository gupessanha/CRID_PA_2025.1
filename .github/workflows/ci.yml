name: CI - Testes do Sistema de Notas

on:
  push:
    #branches: [ main, master ]
  pull_request:
    #branches: [ main, master ]

jobs:
  test:
    name: Compilar e Testar
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do código
        uses: actions/checkout@v4  # Atualizado para v4

      - name: Setup Node.js
        uses: actions/setup-node@v4  # Atualizado para v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Instalar dependências
        run: npm ci

      - name: Compilar contratos
        run: npx hardhat compile

      - name: Executar testes
        run: node scripts/run-tests.js

      # Corrigir o comando para usar o plugin corretamente
      - name: Verificar tamanho dos contratos
        run: npx hardhat size

      # Criar o diretório antes de tentar escrever nele
      - name: Criar diretório para relatórios
        run: mkdir -p test-results

      - name: Gerar relatório de testes
        if: always()
        run: |
          echo "# Relatório de Testes" > test-results/test-report.md
          echo "Data: $(date)" >> test-results/test-report.md
          echo "Commit: ${{ github.sha }}" >> test-results/test-report.md
          
          # Adicionar resultados dos testes, se disponíveis
          if [ -f "test-results/solidity-test-results.json" ]; then
            echo "## Resultados dos Testes Solidity" >> test-results/test-report.md
            echo '```json' >> test-results/test-report.md
            cat test-results/solidity-test-results.json >> test-results/test-report.md
            echo '```' >> test-results/test-report.md
          fi

      - name: Upload relatório de testes
        if: always()
        uses: actions/upload-artifact@v4  # Atualizado para v4
        with:
          name: test-results
          path: test-results/

      - name: Criar diretório para resultados
        run: |
          const fs = require('fs');
          if (!fs.existsSync('./test-results')) {
            fs.mkdirSync('./test-results', { recursive: true });
          }

          # Salvar resultados em JSON para o relatório do CI
          const testResults = {
            timestamp: new Date().toISOString(),
            contractAddress: testeSistemaAddress,
            summary: {
              total: passou + falhou,
              passed: passou,
              failed: falhou
            },
            tests: logs.map((log, index) => ({ id: index + 1, message: log }))
          };

          fs.writeFileSync(
            './test-results/solidity-test-results.json',
            JSON.stringify(testResults, null, 2)
          );

      # Na parte de gerar relatório:
      - name: Criar relatório de deploy
        if: success()
        run: |
          mkdir -p deployment-reports
          echo "# Relatório de Deploy" > deployment-reports/deployment-report.md
          echo "Data: $(date)" >> deployment-reports/deployment-report.md
          echo "Tag: ${{ github.ref_name }}" >> deployment-reports/deployment-report.md
      
      - name: Upload relatório de deploy
        if: success()
        uses: actions/upload-artifact@v4  # Atualizado para v4
        with:
          name: deployment-report
          path: deployment-reports/

